version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    container_name: ir-toolkit-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build: ./frontend
    container_name: ir-toolkit-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
      - datasets:/app/datasets

  postgres:
    build: ./postgres
    container_name: ir-toolkit-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  postgrest:
    image: postgrest/postgrest:latest
    container_name: ir-toolkit-postgrest
    ports:
      - "3001:3000"
    environment:
      - PGRST_DB_URI=postgres://toolkit:123@postgres:5432/metadata
      - PGRST_DB_SCHEMA=toolkit
      - PGRST_DB_ANON_ROLE=toolkit
      - PGRST_SERVER_PROXY_URI=http://ir-toolkit-frontend:3000
    depends_on:
      - postgres

  retriever:
    build: ./retriever
    container_name: ir-toolkit-retriever
    ports:
      - "8000:8000"
    volumes:
      - ./retriever:/app
      - datasets:/app/datasets
    depends_on:
      elasticsearch:
        condition: service_healthy
      postgrest:
        condition: service_started

volumes:
  elastic_data:
  postgres_data:
  datasets:
